{"version":3,"sources":["components/Header/Header.js","redux/modules/rolloutOperation.js","containers/OperationButtons/OperationButtons.js","redux/modules/statusSelection.js","containers/SelectionRadios/SelectionRadios.js","redux/modules/rings.js","containers/RingTable/RingTable.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Header","brand","links","theme","Navbar","fixed","bg","variant","Brand","Nav","className","map","link","Link","href","EXECUTE_OPERATION","initialState","operation","connect","dispatch","onOperationExecuted","type","executeOperation","Button","onClick","STATUS_SELECT","status","state","selected","statusSelection","onStatusSelected","selectStatus","radiosText","Form","style","margin","text","Check","inline","label","value","onChange","e","target","checked","SET_RINGS","rings","getBadgeVariant","operationTransition","start","pause","abort","RingTable","allData","displayedData","fetch","then","response","json","data","props","setRings","prevProps","prevState","this","setState","statusToShow","filteredData","filter","rolloutOperation","changedData","Table","bordered","row","index","Badge","windows","linux","unix","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b291843b.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nconst Header = ({ brand, links, theme }) => (\n  <Navbar fixed=\"top\" bg={theme} variant={theme}>\n    <Navbar.Brand>{brand}</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      {links.map((link) => (\n        <Nav.Link href={`#${link}`}>{link}</Nav.Link>\n      ))}\n    </Nav>\n  </Navbar>\n);\n\nexport default Header;\n","// action type\nexport const EXECUTE_OPERATION = \"EXECUTE_OPERATION\";\n\nconst initialState = {\n  operation: \"\",\n};\n\nexport default function rolloutOperationReducer(\n  state = initialState,\n  action = {}\n) {\n  switch (action.type) {\n    case EXECUTE_OPERATION:\n      return {\n        ...state,\n        operation: action.operation,\n      };\n\n    default:\n      return state;\n  }\n}\n\n// action creator\nexport const executeOperation = (operation) => ({\n  type: EXECUTE_OPERATION,\n  operation,\n});\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { executeOperation } from \"../../redux/modules/rolloutOperation\";\nimport \"./OperationButtons.css\";\n\nconst OperationButtons = ({ onOperationExecuted }) => (\n  <div className=\"operation-buttons\">\n    <Button\n      variant=\"outline-primary\"\n      onClick={() => onOperationExecuted(\"start\")}\n    >\n      Start\n    </Button>\n    <Button\n      variant=\"outline-secondary\"\n      onClick={() => onOperationExecuted(\"pause\")}\n    >\n      Pause\n    </Button>\n    <Button\n      variant=\"outline-danger\"\n      onClick={() => onOperationExecuted(\"abort\")}\n    >\n      Abort\n    </Button>\n  </div>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  onOperationExecuted: (operation) => dispatch(executeOperation(operation)),\n});\n\nexport default connect(null, mapDispatchToProps)(OperationButtons);\n","// action type\nexport const STATUS_SELECT = \"STATUS_SELECT\";\n\nconst initialState = {\n  status: \"All\",\n};\n\nexport default function statusSelectionReducer(\n  state = initialState,\n  action = {}\n) {\n  switch (action.type) {\n    case STATUS_SELECT:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    default:\n      return state;\n  }\n}\n\n// action creator\nexport const selectStatus = (status) => ({\n  type: STATUS_SELECT,\n  status,\n});\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { connect } from \"react-redux\";\nimport { selectStatus } from \"../../redux/modules/statusSelection\";\n\nconst SelectionRadios = ({ radiosText, selected, onStatusSelected }) => (\n  <Form>\n    <div style={{ margin: \"12px\" }}>\n      {radiosText.map((text) => (\n        <Form.Check\n          inline\n          label={text}\n          value={text}\n          type=\"radio\"\n          key={`selection-radio-${text}`}\n          onChange={(e) => onStatusSelected(e.target.value)}\n          checked={selected === text}\n        />\n      ))}\n    </div>\n  </Form>\n);\n\nconst mapStateToProps = (state) => ({\n  selected: state.statusSelection.status,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onStatusSelected: (status) => dispatch(selectStatus(status)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionRadios);\n","// action type\nexport const SET_RINGS = \"SET_RINGS\";\n\nconst initialState = {\n  rings: [],\n};\n\nexport default function ringsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_RINGS:\n      return {\n        ...state,\n        rings: action.rings,\n      };\n\n    default:\n      return state;\n  }\n}\n\n// action creator\nexport const setRings = (data) => ({\n  type: SET_RINGS,\n  rings: data,\n});\n","import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { connect } from \"react-redux\";\nimport { setRings } from \"../../redux/modules/rings\";\n\nconst getBadgeVariant = (status) => {\n  switch (status) {\n    case \"Complete\":\n      return \"success\";\n\n    case \"Ongoing\":\n      return \"warning\";\n\n    case \"Failed\":\n      return \"danger\";\n\n    case \"Aborted\":\n      return \"dark\";\n\n    default:\n      return \"secondary\";\n  }\n};\n\nconst operationTransition = {\n  start: \"Ongoing\",\n  pause: \"Paused\",\n  abort: \"Aborted\",\n};\n\nclass RingTable extends Component {\n  state = {\n    allData: [],\n    displayedData: [],\n  };\n\n  componentDidMount() {\n    fetch(\"https://run.mocky.io/v3/adc0e655-b26f-4738-a0d8-9cc976a8fa36\")\n      .then((response) => response.json())\n      .then((data) => this.props.setRings(data));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rings !== this.props.rings) {\n      this.setState({\n        allData: this.props.rings,\n        displayedData: this.props.rings,\n      });\n    }\n\n    if (\n      prevProps.statusToShow !== this.props.statusToShow ||\n      prevState.allData !== this.state.allData\n    ) {\n      const filteredData =\n        this.props.statusToShow === \"All\"\n          ? this.state.allData\n          : this.state.allData.filter(\n              (data) => data.status === this.props.statusToShow\n            );\n\n      this.setState({ displayedData: filteredData });\n    }\n\n    if (prevProps.rolloutOperation !== this.props.rolloutOperation) {\n      const changedData = this.state.allData.map((data) => ({\n        ...data,\n        status:\n          data.status === \"Paused\" || data.status === \"Ongoing\"\n            ? operationTransition[this.props.rolloutOperation]\n            : data.status,\n      }));\n\n      this.setState({ allData: changedData });\n    }\n  }\n\n  render() {\n    return (\n      <Table bordered>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Rollout Status</th>\n            <th>Windows</th>\n            <th>Linux</th>\n            <th>Unix</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.displayedData.map((row, index) => (\n            <tr key={`ring-row-${index}`}>\n              <td>{row.target}</td>\n              <td>\n                <Badge variant={getBadgeVariant(row.status)}>\n                  {row.status}\n                </Badge>\n              </td>\n              <td>{row.windows}</td>\n              <td>{row.linux}</td>\n              <td>{row.unix}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  rings: state.rings.rings,\n  statusToShow: state.statusSelection.status,\n  rolloutOperation: state.rolloutOperation.operation,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setRings: (data) => dispatch(setRings(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RingTable);\n","import { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport OperationButtons from \"./containers/OperationButtons/OperationButtons\";\nimport SelectionRadios from \"./containers/SelectionRadios/SelectionRadios\";\nimport RingTable from \"./containers/RingTable/RingTable\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header\n          brand=\"React Workshop Lab\"\n          links={[\"Home\", \"Feeds\"]}\n          theme=\"dark\"\n        />\n        <OperationButtons />\n        <SelectionRadios\n          radiosText={[\n            \"Complete\",\n            \"Ongoing\",\n            \"Paused\",\n            \"Failed\",\n            \"Aborted\",\n            \"All\",\n          ]}\n        />\n        <RingTable />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from \"redux\";\nimport rolloutOperationReducer from \"./modules/rolloutOperation\";\nimport statusSelectionReducer from \"./modules/statusSelection\";\nimport ringsReducer from \"./modules/rings\";\n\nconst rootReducer = combineReducers({\n  rolloutOperation: rolloutOperationReducer,\n  statusSelection: statusSelectionReducer,\n  rings: ringsReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}