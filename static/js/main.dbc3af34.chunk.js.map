{"version":3,"sources":["Header.js","OperationButtons.js","SelectionRadios.js","RingTable.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","fixed","bg","variant","Brand","Nav","className","Link","href","OperationButtons","Button","radiosText","SelectionRadios","Form","style","margin","map","text","Check","inline","label","value","type","getBadgeVariant","status","RingTable","Table","bordered","Badge","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAceA,EAVA,kBACb,eAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,GAAG,OAAOC,QAAQ,OAAtC,UACE,cAACH,EAAA,EAAOI,MAAR,iCACA,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,QAAf,kBACA,cAACH,EAAA,EAAIE,KAAL,CAAUC,KAAK,SAAf,0B,QCGSC,G,MARU,kBACvB,sBAAKH,UAAU,oBAAf,UACE,cAACI,EAAA,EAAD,CAAQP,QAAQ,kBAAhB,mBACA,cAACO,EAAA,EAAD,CAAQP,QAAQ,oBAAhB,mBACA,cAACO,EAAA,EAAD,CAAQP,QAAQ,iBAAhB,wB,QCLEQ,EAAa,CACjB,WACA,UACA,SACA,SACA,UACA,OAmBaC,EAhBS,kBACtB,cAACC,EAAA,EAAD,UACE,qBAAKC,MAAO,CAAEC,OAAQ,QAAtB,SACGJ,EAAWK,KAAI,SAACC,GAAD,OACd,cAACJ,EAAA,EAAKK,MAAN,CACEC,QAAM,EACNC,MAAOH,EACPI,MAAOJ,EACPK,KAAK,SAJP,0BAK0BL,Y,gBCjB5BM,EAAkB,SAACC,GACvB,OAAQA,GACN,IAAK,WACH,MAAO,UAET,IAAK,UACH,MAAO,UAET,IAAK,SACH,MAAO,SAET,IAAK,UACH,MAAO,OAET,QACE,MAAO,cA2BEC,EAvBG,kBAChB,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAAf,UACE,gCACE,+BACE,uBACA,gDACA,yCACA,uCACA,2CAGJ,gCACE,+BACE,qCACA,6BAAI,cAACC,EAAA,EAAD,CAAOzB,QAASoB,EAAgB,YAAhC,wBACJ,4CACA,4CACA,qDCrBOM,E,uKAXX,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAPUC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dbc3af34.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nconst Header = () => (\n  <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand>React Workshop Lab</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\">Home</Nav.Link>\n      <Nav.Link href=\"#feeds\">Feeds</Nav.Link>\n    </Nav>\n  </Navbar>\n);\n\nexport default Header;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./OperationButtons.css\";\n\nconst OperationButtons = () => (\n  <div className=\"operation-buttons\">\n    <Button variant=\"outline-primary\">Start</Button>\n    <Button variant=\"outline-secondary\">Pause</Button>\n    <Button variant=\"outline-danger\">Abort</Button>\n  </div>\n);\n\nexport default OperationButtons;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nconst radiosText = [\n  \"Complete\",\n  \"Ongoing\",\n  \"Paused\",\n  \"Failed\",\n  \"Aborted\",\n  \"All\",\n];\n\nconst SelectionRadios = () => (\n  <Form>\n    <div style={{ margin: \"12px\" }}>\n      {radiosText.map((text) => (\n        <Form.Check\n          inline\n          label={text}\n          value={text}\n          type=\"radio\"\n          key={`selection-radio-${text}`}\n        />\n      ))}\n    </div>\n  </Form>\n);\n\nexport default SelectionRadios;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Badge from \"react-bootstrap/Badge\"\n\nconst getBadgeVariant = (status) => {\n  switch (status) {\n    case \"Complete\":\n      return \"success\";\n\n    case \"Ongoing\":\n      return \"warning\";\n\n    case \"Failed\":\n      return \"danger\";\n\n    case \"Aborted\":\n      return \"dark\";\n\n    default:\n      return \"secondary\";\n  }\n};\n\nconst RingTable = () => (\n  <Table bordered>\n    <thead>\n      <tr>\n        <th></th>\n        <th>Rollout Status</th>\n        <th>Windows</th>\n        <th>Linux</th>\n        <th>Unix</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>GIS</td>\n        <td><Badge variant={getBadgeVariant('Complete')}>Complete</Badge></td>\n        <td>20.0.0-211</td>\n        <td>20.0.0-211</td>\n        <td>20.0.0-211</td>\n      </tr>\n    </tbody>\n  </Table>\n);\n\nexport default RingTable;\n","import { Component } from \"react\";\nimport Header from \"./Header\";\nimport OperationButtons from \"./OperationButtons\";\nimport SelectionRadios from \"./SelectionRadios\";\nimport RingTable from \"./RingTable\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <OperationButtons />\n        <SelectionRadios />\n        <RingTable />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}